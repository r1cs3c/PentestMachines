#!/bin/bash
# updates docker images
#MY IMAGES VERSION CONTROL
ubuntu_dev="r1cs3c/ubuntu-dev:0.17"
ubuntu_asm="r1cs3c/asm_dev:0.17"
kali="r1cs3c/kali_build:0.17"
docker_dev_build_folder=""
docker_kali_build_folder=""

function update_external(){
    ### ALL OTHER IMAGES UPDATE STARTS ###
    echo '******************************************'
    echo '*** updating all Images to latest version ***'
    echo '******************************************'
    #docker pull alpine/git
    docker pull codacy/codacy-analysis-cli
    docker pull mcr.microsoft.com/powershell
    docker pull returntocorp/semgrep
}

function rebuild_update(){
    echo '******************************************'
    echo '***  Rebuild and update r1cs3c images  ***'
    echo '******************************************'
    
    echo ' '
    echo '[***] Docker login [***]'
    docker login
    
    ## Build new multi-arch omages for Dev and Kali update, upgrade and push.
    # initialise buildx
    docker buildx create --use


    echo ' '
    echo '[***] Rebuild ubuntu-dev [***]'
    docker pull r1cs3c/ubuntu-dev:latest
    docker tag r1cs3c/ubuntu-dev:latest $ubuntu_dev
    docker push $ubuntu_dev
    docker buildx build --platform linux/amd64,linux/arm64 --push -t r1cs3c/ubuntu-dev:latest ../build_dev
    docker pull r1cs3c/ubuntu-dev:latest
    
    echo ' '
    echo '[***] Rebuild asm_dev [***]'
    docker pull r1cs3c/asm_dev:latest
    docker tag r1cs3c/asm_dev:latest $ubuntu_asm
    docker push $ubuntu_asm
    docker buildx build --platform linux/amd64,linux/arm64 --push -t r1cs3c/asm_dev:latest ../build_asm
    docker pull r1cs3c/asm_dev:latest
    
    echo ' '
    echo '[***] Rebuild kali_build [***]'
    docker pull r1cs3c/kali_build:latest
    docker tag r1cs3c/kali_build:latest $kali
    docker push $kali
    docker buildx build --platform linux/amd64,linux/arm64 --push -t r1cs3c/kali_build:latest ../build_kali
    docker pull r1cs3c/kali_build:latest
    
    echo ' '
    echo '******************************************'
    echo '* Do not forget to clean the Docker img  *'
    echo '******************************************'
}

function manual_update(){
    ### LOCAL DEV UPDATE STARTS ###
    echo '******************************************'
    echo '***     updating r1cs3c/ubuntu-dev     ***'
    echo '******************************************'
    docker run --rm -d --name "ubuntu_update"  -ti r1cs3c/ubuntu-dev:latest /bin/bash
    docker commit ubuntu_update $ubunut_dev 
    docker exec -ti ubuntu_update bash -c "apt update"
    docker exec -ti ubuntu_update bash -c "apt upgrade -y"

    echo '*** New Tool Installations r1cs3c/ubuntu-dev ***'
    #docker exec -ti ubuntu_update bash -c "apt install firefox"
    #docker exec -ti ubuntu_update bash -c "apt install python3-pip"
    #docker exec -ti ubuntu_update bash -c "pip install netaddr"

    echo '*** updating r1cs3c/ubuntu-dev - node.js ***'
    docker exec -ti ubuntu_update bash -c "npm cache clean -f"
    docker exec -ti ubuntu_update bash -c "npm install -g n"
    docker exec -ti ubuntu_update bash -c "n stable"
    docker exec -ti ubuntu_update bash -c "rm /usr/bin/node*"
    docker exec -ti ubuntu_update bash -c "apt remove nodejs"
    docker exec -ti ubuntu_update bash -c "apt purge nodejs"

    echo '*** Other updates r1cs3c/ubuntu-dev ***'
    docker exec -ti ubuntu_update bash -c "npm install -g npm to update"
    docker exec -ti ubuntu_update bash -c "npm audit fix --force"

    echo '*** New Tool Installations r1cs3c/ubuntu_dev ***'
    # Install remote desktop
    # apt install xrdp
    # apt install xfce4 xfce4-terminal
    # sed -i.bak '/fi/a #xrdp multiple users configuration \n xfce-session \n' /etc/xrdp/startwm.sh
    # /etc/init.d/xrdp restart
    # open ports 3390 and 3350


    echo '*** updating r1cs3c/ubuntu-dev - clean history and apt ***'
    docker exec -ti ubuntu_update bash -c "history -c"
    docker exec -ti ubuntu_update bash -c "apt autoclean"
    docker exec -ti ubuntu_update bash -c "apt autoremove"
    docker commit ubuntu_update r1cs3c/ubuntu-dev:latest
    docker stop ubuntu_update

    ### UBUNTU ASM UPDATE STARTS ###
    echo '******************************************'
    echo '***     updating r1cs3c/asm_dev        ***'
    echo '******************************************'
    docker run --rm -d --name "asm_update"  -ti r1cs3c/asm_dev:latest /bin/bash
    docker commit asm_update $ubuntu_asm #r1cs3c/asm_dev:0.11
    docker exec -ti asm_update bash -c "apt update"
    docker exec -ti asm_update bash -c "apt upgrade -y"

    echo '*** updating r1cs3c/asm_dev - node.js ***'
    docker exec -ti asm_update bash -c "npm cache clean -f"
    docker exec -ti asm_update bash -c "npm install -g n"
    docker exec -ti asm_update bash -c "n stable"

    echo '*** Other updates r1cs3c/asm_dev ***'
    docker exec -ti asm_update bash -c "npm install -g npm to update"
    docker exec -ti asm_update bash -c "npm audit fix --force"

    docker exec -ti asm_update bash -c "history -c"
    docker exec -ti asm_update bash -c "apt autoclean"
    docker exec -ti asm_update bash -c "apt autoremove"
    docker commit asm_update r1cs3c/asm_dev:latest
    docker stop asm_update

    ### UBUNTU KALI UPDATE STARTS ###
    echo '******************************************'
    echo '***     updating r1cs3c/kali_build     ***'
    echo '******************************************'
    docker run --rm -d --name "kali_update"  -ti r1cs3c/kali_build:latest /bin/bash
    docker commit kali_update $kali #r1cs3c/kali_build:0.05
    docker exec -ti kali_update bash -c "apt update"
    docker exec -ti kali_update bash -c "apt upgrade -y"

    echo '*** New Tool Installations r1cs3c/kali_build ***'
    #docker exec -ti kali_update bash -c "apt install ffuf"


    echo '*** updating r1cs3c/kali_build - node.js ***'
    docker exec -ti kali_update bash -c "npm cache clean -f"
    docker exec -ti kali_update bash -c "npm install -g n"
    docker exec -ti kali_update bash -c "n stable"
    docker exec -ti kali_update bash -c "rm /usr/bin/node*"
    docker exec -ti kali_update bash -c "apt remove nodejs"
    docker exec -ti kali_update bash -c "apt purge nodejs"

    echo '*** Other updates r1cs3c/kali_build ***'
    docker exec -ti kali_update bash -c "npm install -g npm to update"
    docker exec -ti kali_update bash -c "npm audit fix --force"


    echo '*** updating r1cs3c/kali_build - clean history and apt ***'
    docker exec -ti kali_update bash -c "history -c"
    docker exec -ti kali_update bash -c "apt autoclean"
    docker exec -ti kali_update bash -c "apt autoremove"
    docker commit kali_update r1cs3c/kali_build:latest
    docker stop kali_update

    echo '******************************************'
    echo '******************************************'
    echo '******************************************'
}

function main(){
    update_external

    rebuild_update

    #manual_update

}

main