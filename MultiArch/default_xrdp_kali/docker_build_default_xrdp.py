import subprocess
import sys

#Build and push Docker image for both amd64 and arm64 platforms
def build_and_push():
    subprocess.run(["docker", "buildx", "build", "--platform", "linux/amd64,linux/arm64", "--push", "-t", "r1cs3c/kali_default_xrdp:latest", "./"])

# Build Docker image for amd64 platform only
def build_amd64():
    subprocess.run(["docker", "buildx", "build", "--platform", "linux/amd64", "-t", "r1cs3c/kali_default_xrdp:latest", "./"])

# Build Docker image for arm64 platform only
def build_arm64():
    subprocess.run(["docker", "buildx", "build", "--platform", "linux/arm64", "-t", "r1cs3c/kali_default_xrdp:latest", "./"])

# Load the Docker image using docker-compose
def load():
    subprocess.run(["docker-compose", "up", "-d"])


def print_help():
    print("Usage: python3 script.py [option]")
    print("Options:")
    print("  --build-and-push : Build and push Docker image for both amd64 and arm64 platforms")
    print("  --build-amd64    : Build Docker image for amd64 platform only")
    print("  --build-arm64    : Build Docker image for arm64 platform only")
    print("  --load           : Load the Docker image using docker-compose")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Error: Invalid number of arguments")
        print_help()
    else:
        option = sys.argv[1]
        if option == "--build-and-push":
            build_and_push()
        elif option == "--build-amd64":
            build_amd64()
        elif option == "--build-arm64":
            build_arm64()
        elif option == "--load":
            load()
        else:
            print(f"Error: Unknown option '{option}'")
            print_help()
